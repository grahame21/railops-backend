name: TrainFinder Fetch (every 5 min)

on:
  schedule:
    - cron: "*/5 * * * *"      # every 5 minutes
  workflow_dispatch:

jobs:
  fetch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install playwright requests
          playwright install chromium

      - name: Login + fetch
        env:
          TRAINFINDER_USERNAME: ${{ secrets.TRAINFINDER_USERNAME }}
          TRAINFINDER_PASSWORD: ${{ secrets.TRAINFINDER_PASSWORD }}
        run: |
          echo "ðŸš† Running TrainFinder login_and_sweep.py"
          python login_and_sweep.py
          test -f trains.json && echo "trains.json present"

      - name: Commit trains.json if changed
        id: commit
        run: |
          git config user.name  "github-actions"
          git config user.email "actions@github.com"

          if [[ -n "$(git status --porcelain trains.json)" ]]; then
            git add trains.json last_response.json cookie.txt || true
            git commit -m "Auto-update trains.json [skip ci]" || true
            git push || true
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "No changes in trains.json"
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      # âœ… only ping Netlify when the JSON actually changed
      - name: Trigger Netlify build
        if: steps.commit.outputs.changed == 'true'
        env:
          BUILD_HOOK: ${{ secrets.NETLIFY_BUILD_HOOK_URL }}
        run: |
          if [ -z "$BUILD_HOOK" ]; then
            echo "No NETLIFY_BUILD_HOOK_URL secret set â€” skipping."
            exit 0
          fi
          echo "ðŸ”” Triggering Netlify build hookâ€¦"
          curl -sS -X POST "$BUILD_HOOK"
          echo "âœ… Netlify build triggered"
