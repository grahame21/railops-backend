name: 🚆 TrainFinder Data Collector

on:
  schedule:
    - cron: "*/1 * * * *"     # run every minute
  workflow_dispatch:          # allow manual runs

jobs:
  collect:
    runs-on: ubuntu-latest
    timeout-minutes: 8

    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: ⚙️ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install playwright
          playwright install --with-deps chromium

      - name: 🚆 Run login_and_collect.py
        env:
          TRAINFINDER_USERNAME: ${{ secrets.TRAINFINDER_USERNAME }}
          TRAINFINDER_PASSWORD: ${{ secrets.TRAINFINDER_PASSWORD }}
        run: |
          echo "🚆 Running login_and_collect.py"
          python scripts/login_and_collect.py
          test -s trains.json && echo "✅ trains.json generated"

      - name: 🔍 Detect if trains.json changed
        id: changed
        run: |
          if [[ -n "$(git status --porcelain trains.json)" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: 📤 Commit & push updated trains.json
        if: steps.changed.outputs.changed == 'true'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add trains.json
          git commit -m "Auto-update trains.json $(date -u +'%Y-%m-%d %H:%M:%S')"
          git push

      - name: 🔔 Trigger Netlify deploy (only when trains.json changed)
        if: steps.changed.outputs.changed == 'true' && env.NETLIFY_BUILD_HOOK != ''
        env:
          NETLIFY_BUILD_HOOK: ${{ secrets.NETLIFY_BUILD_HOOK }}
        run: |
          echo "Triggering Netlify build hook…"
          curl -s -X POST -H "Content-Type: application/json" -d '{}' "$NETLIFY_BUILD_HOOK" && echo "Hook sent."
